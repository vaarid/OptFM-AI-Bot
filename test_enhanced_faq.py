#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ FAQ Manager
"""
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from faq.enhanced_faq_manager import EnhancedFAQManager

def test_enhanced_faq():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ FAQ Manager"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ FAQ Manager –¥–ª—è OptFM")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FAQ Manager
    faq_manager = EnhancedFAQManager()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = faq_manager.get_statistics()
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ FAQ:")
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {stats['total_faq']}")
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤: {stats['total_keywords']}")
    print(f"   ‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å: {stats['average_keywords_per_faq']}")
    print(f"   ‚Ä¢ –†–∞–∑–º–µ—Ä –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞: {stats['search_index_size']}")
    print()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    test_queries = [
        "–∫–∞–∫–∏–µ —Ç–æ–≤–∞—Ä—ã —É –≤–∞—Å –µ—Å—Ç—å",
        "–¥–æ—Å—Ç–∞–≤–∫–∞",
        "–æ–ø–ª–∞—Ç–∞",
        "–∫–æ–Ω—Ç–∞–∫—Ç—ã",
        "–≥–∞—Ä–∞–Ω—Ç–∏—è",
        "—Ü–µ–Ω—ã",
        "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
        "–æ–ø—Ç",
        "—Ä–æ–∑–Ω–∏—Ü–∞",
        "–≤–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞",
        "–ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞",
        "—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
        "—Ä–µ–º–æ–Ω—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤",
        "api –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è",
        "–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
        "—Ä–∞—Å—Å—ã–ª–∫–∞",
        "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä",
        "—Å–∫–∏–¥–∫–∏",
        "—Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏",
        "–∫–∞—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤"
    ]
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞:")
    print("-" * 60)
    
    for i, query in enumerate(test_queries, 1):
        print(f"{i:2d}. –ó–∞–ø—Ä–æ—Å: '{query}'")
        
        # –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞
        result = faq_manager.search_faq(query)
        
        if result:
            print(f"    ‚úÖ –ù–∞–π–¥–µ–Ω –æ—Ç–≤–µ—Ç: {result['question']}")
            print(f"    üìù ID: {result['id']}")
        else:
            print(f"    ‚ùå –û—Ç–≤–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
            # –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
            similar = faq_manager.search_similar_questions(query, limit=2)
            if similar:
                print(f"    üîç –ü–æ—Ö–æ–∂–∏–µ –≤–æ–ø—Ä–æ—Å—ã:")
                for j, sim_faq in enumerate(similar, 1):
                    print(f"       {j}. {sim_faq['question']}")
        
        print()
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    print("üìÇ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
    print("-" * 60)
    
    categories = ["–¥–æ—Å—Ç–∞–≤–∫–∞", "–æ–ø–ª–∞—Ç–∞", "–∫–æ–Ω—Ç–∞–∫—Ç—ã", "–≥–∞—Ä–∞–Ω—Ç–∏—è", "–æ–ø—Ç"]
    
    for category in categories:
        category_faq = faq_manager.get_faq_by_category(category)
        print(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category}': {len(category_faq)} –≤–æ–ø—Ä–æ—Å–æ–≤")
        for faq in category_faq:
            print(f"  ‚Ä¢ {faq['question']}")
        print()
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ö–æ–∂–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø–æ—Ö–æ–∂–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:")
    print("-" * 60)
    
    similar_test_queries = [
        "–∫–∞–∫ –¥–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä",
        "—É—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã",
        "—Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º",
        "–≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
        "–æ–ø—Ç–æ–≤—ã–µ —Ü–µ–Ω—ã"
    ]
    
    for query in similar_test_queries:
        print(f"–ó–∞–ø—Ä–æ—Å: '{query}'")
        similar = faq_manager.search_similar_questions(query, limit=3)
        if similar:
            print("–ü–æ—Ö–æ–∂–∏–µ –≤–æ–ø—Ä–æ—Å—ã:")
            for i, faq in enumerate(similar, 1):
                print(f"  {i}. {faq['question']}")
        else:
            print("  –ü–æ—Ö–æ–∂–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        print()
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_enhanced_faq()
