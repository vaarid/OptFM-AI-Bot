#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∏—Ç–µ—Ä–∞—Ü–∏–∏ 7
"""
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from db.database import init_database
from db.repository import UserRepository, RequestRepository, DialogRepository
from forms.request_form import RequestFormManager
from notifications.manager_notifier import ManagerNotifier, NotificationConfig

def test_database():
    """–¢–µ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        db_manager = init_database()
        session = db_manager.get_session_sync()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
        user_repo = UserRepository(session)
        request_repo = RequestRepository(session)
        dialog_repo = DialogRepository(session)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        existing_user = user_repo.get_by_telegram_id(123456789)
        if existing_user:
            print("‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ")
            test_user = existing_user
        else:
        
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            test_user = user_repo.create_user(
                telegram_id=123456789,
                username="test_user",
                first_name="–¢–µ—Å—Ç",
                last_name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            )
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user.id}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã
        user_repo.update_user_contacts(test_user.id, phone="+7 999 123-45-67", email="test@example.com")
        print("‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É
        test_request = request_repo.create_request(
            user_id=test_user.id,
            title="–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞",
            description="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏"
        )
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞: {test_request.id}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∏–∞–ª–æ–≥
        dialog_repo.add_dialog(test_user.id, "–¢–µ—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å", "–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç", True)
        print("‚úÖ –î–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        requests = request_repo.get_user_requests(test_user.id)
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞—è–≤–æ–∫: {len(requests)}")
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–µ –∑–∞—è–≤–∫–∏
        new_requests = request_repo.get_new_requests()
        print(f"‚úÖ –ù–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫: {len(new_requests)}")
        
        session.close()
        print("‚úÖ –¢–µ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False
    
    return True

def test_request_form():
    """–¢–µ—Å—Ç —Ñ–æ—Ä–º—ã –∑–∞—è–≤–∫–∏"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã –∑–∞—è–≤–∫–∏...")
    
    try:
        form_manager = RequestFormManager()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ —Ñ–æ—Ä–º—ã
        message = form_manager.start_form(123456789, "–¢–µ—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å")
        print(f"‚úÖ –ù–∞—á–∞–ª–æ —Ñ–æ—Ä–º—ã: {message[:50]}...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–º–µ–Ω–∏
        result = form_manager.process_input(123456789, "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤")
        print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏: {result['message'][:50]}...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        result = form_manager.process_input(123456789, "+7 999 123-45-67")
        print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {result['message'][:50]}...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É email
        result = form_manager.process_input(123456789, "test@example.com")
        print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ email: {result['message'][:50]}...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ–ø–∏—Å–∞–Ω–∏—è
        result = form_manager.process_input(123456789, "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
        print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è: {result['message'][:50]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–æ—Ä–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
        if result.get("completed", False):
            print("‚úÖ –§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            print(f"üìã –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã: {result['data']}")
        else:
            print("‚ùå –§–æ—Ä–º–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
            return False
        
        print("‚úÖ –¢–µ—Å—Ç —Ñ–æ—Ä–º—ã –∑–∞—è–≤–∫–∏ –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ —Ñ–æ—Ä–º—ã –∑–∞—è–≤–∫–∏: {e}")
        return False
    
    return True

def test_notifications():
    """–¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        config = NotificationConfig.get_default_config()
        notifier = ManagerNotifier(config)
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        request_data = {
            "id": 1,
            "title": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞",
            "description": "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π",
            "created_at": "2025-01-01 12:00:00"
        }
        
        user_data = {
            "name": "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
            "phone": "+7 999 123-45-67",
            "email": "test@example.com",
            "telegram_id": 123456789
        }
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏)
        success = notifier.notify_new_request(request_data, user_data)
        
        if success:
            print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (–æ–∂–∏–¥–∞–µ–º–æ –¥–ª—è —Ç–µ—Å—Ç–∞)")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞—Ö
        managers = notifier.get_managers_info()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤: {len(managers)}")
        
        print("‚úÖ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")
        return False
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏—Ç–µ—Ä–∞—Ü–∏–∏ 7: –ü–µ—Ä–µ–¥–∞—á–∞ –∑–∞—è–≤–æ–∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É\n")
    
    tests = [
        ("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö", test_database),
        ("–§–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏", test_request_form),
        ("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", test_notifications)
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"\n{'='*50}")
        print(f"–¢–µ—Å—Ç: {test_name}")
        print('='*50)
        
        if test_func():
            passed += 1
        else:
            print(f"‚ùå –¢–µ—Å—Ç '{test_name}' –ø—Ä–æ–≤–∞–ª–µ–Ω")
    
    print(f"\n{'='*50}")
    print(f"–†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print('='*50)
    print(f"‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: {passed}/{total}")
    print(f"‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: {total - passed}/{total}")
    
    if passed == total:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ! –ò—Ç–µ—Ä–∞—Ü–∏—è 7 –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
    else:
        print(f"\n‚ö†Ô∏è {total - passed} —Ç–µ—Å—Ç(–æ–≤) –ø—Ä–æ–≤–∞–ª–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
    
    return passed == total

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
